sonar.projectKey=git_redemption_AYM1-zaJyCEhc4zNOLNb
sonar.qualitygate.wait=true
sonar.sources=src/,tools/sesman/sesmanworker/
sonar.tests=tests/,tools/sesman/tests/
sonar.exclusions=src/keyboard/keylayouts.cpp,.git/**,modules/*/.git/**,projects/redemption_configs/include/autogen/**,projects/redemption_configs/autogen/**,projects/ocr1/include/**,projects/qtclient/**,modules/**



sonar.issue.ignore.block=e1
sonar.issue.ignore.block.e1.beginBlockRegexp=sonarqube off
sonar.issue.ignore.block.e1.endBlockRegexp=sonarqube on
sonar.cxx.defines=ZLIB_CONST \n\
                  FIXTURES_PATH "mypath" /*NOLINT*/ \n\
                  REDEMPTION_DECL_LOG_TEST \n\
                  BOOST_AUTO_TEST_MAIN \n\
                  BOOST_TEST_DYN_LINK \n\
                  RED_TEST_MODULE dummy_name \n\
                  REDEMPTION_COMP_GCC 0 \n\
                  REDEMPTION_COMP_CLANG 1800 \n\
                  REDEMPTION_WORKAROUND(symbol, test) ((symbol) != 0 && ((symbol) test))
sonar.cxx.FunctionName=.*
sonar.cxx.UndocumentedApi=Info
sonar.issue.ignore.multicriteria=e1,e2,e3,e30,e31,e32
sonar.issue.ignore.multicriteria.e1.ruleKey=cxx:FunctionName
sonar.issue.ignore.multicriteria.e1.resourceKey=**
sonar.issue.ignore.multicriteria.e2.ruleKey=cxx:MethodName
sonar.issue.ignore.multicriteria.e2.resourceKey=**
sonar.issue.ignore.multicriteria.e3.ruleKey=cxx:ClassName
sonar.issue.ignore.multicriteria.e3.resourceKey=**
sonar.issue.ignore.multicriteria.e30.ruleKey=cxx:UndocumentedApi
sonar.issue.ignore.multicriteria.e30.resourceKey=**
sonar.issue.ignore.multicriteria.e31.ruleKey=cxx:ParsingErrorRecovery
sonar.issue.ignore.multicriteria.e31.resourceKey=**
sonar.issue.ignore.multicriteria.e32.ruleKey=cxx:TooManyStatementsPerLine
sonar.issue.ignore.multicriteria.e32.resourceKey=**
# don't work: (https://jira.sonarsource.com/browse/SONAR-8230)
# sonar.issue.ignore.multicriteria.e33.ruleKey=common-cxx:InsufficientCommentDensity
# sonar.issue.ignore.multicriteria.e33.resourceKey=**
# sonar.issue.ignore.multicriteria.e34.ruleKey=common-cxx:InsufficientLineCoverage
# sonar.issue.ignore.multicriteria.e34.resourceKey=projects/jsclient/src/**
# rule.common-cxx.InsufficientCommentDensity.param.minimumCommentDensity=0
# rule.common-cxx.InsufficientCommentDensity.param.minimumLineCoverageRatio=0

# coverage and tests (https://docs.sonarqube.org/latest/analysis/coverage/)
# sonar.tests=tests/**.cpp,projects/jsclient/tests/**.cpp,modules/ppocr/tests,modules/packager/tests/**.py,tools/conf_migration_tool/tests/**.py,tools/sesman/tests/**.py
sonar.cxx.cobertura.reportPaths=gcovr_report.xml
sonar.cxx.valgrind.reportPaths=valgrind_reports/**.xml
sonar.cxx.clangtidy.reportPaths=clang_tidy_report.txt
sonar.cxx.gcc.reportPaths=report1.txt,report2.txt
# sonar.cfamily.llvm-cov.reportPath=
# sonar.cfamily.cppunit.reportsPath=

sonar.python.coverage.reportPaths=py_coverage.xml
sonar.python.flake8.reportPaths=ruff_report.txt
sonar.python.version=3.11
