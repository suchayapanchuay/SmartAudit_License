if $(TIMESTAMP_WITH_LOGPRINT) = 1
{
    obj log_print.o : $(REDEMPTION_SRC_PATH)/utils/log_as_logprint.cpp
        : <define>REDEMPTION_LOG_PRINT_WITH_TIMESTAMP ;
}
else
{
    obj log_print.o : $(REDEMPTION_SRC_PATH)/utils/log_as_logprint.cpp ;
}

if $(FORCE_LOGPRINT) = 1
{
    alias log.o : log_print.o ;
}
else
{
    obj log.o : $(REDEMPTION_SRC_PATH)/utils/log_as_syslog.cpp ;
}

obj app_path_exe.o : $(REDEMPTION_SRC_PATH)/core/app_path.cpp :
    <conditional>@defines
    <define>SHARE_PATH='\"$(SHARE_PREFIX)\"'
    <define>CFG_PATH='\"$(ETC_PREFIX)\"'
;

obj app_path_test.o : $(REDEMPTION_TEST_PATH)/includes/test_only/app_path_test.cpp :
    <define>FIXTURES_PATH='\"$(FIXTURES_PATH)\"'
    <define>SHARE_PATH='\"$(FIXTURES_SHARE_PATH)\"'
    <define>CFG_PATH='\"$(REDEMPTION_SYS_PATH)/etc/rdpproxy/\"'
    <include>$(REDEMPTION_TEST_PATH)/includes
    <variant>san:<define>RED_COMPILE_TYPE=san
    <variant>debug:<define>RED_COMPILE_TYPE=debug
    <variant>release:<define>RED_COMPILE_TYPE=release
;

explicit log_print.o log.o app_path_exe.o app_path_test.o ;

constant LIB_DEPENDENCIES :
    <library>app_path_exe.o
    <cxxflags>-fPIC
    <variant>release:<cxxflags>-fvisibility=hidden
    <link>shared
    <linkflags>-Wl,-Bsymbolic
;

EXE_DEPENDENCIES +=
    <library>app_path_exe.o
    <library>log.o
;

constant EXE_DEPENDENCIES_NO_SYSLOG :
    <library>app_path_exe.o
    <library>log_print.o
;
